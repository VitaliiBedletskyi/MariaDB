name: Create Release

env:
  MAIN_BRANCH: release

on:
  workflow_dispatch:
  push:
    branches:
      - $MAIN_BRANCH

jobs:
  release:
    name: Release plugin
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3

      - name: Get current package.json version
        id: extract-version
        uses: Saionaro/extract-package-version@v1.2.1

      - name: Check if exist tag from package json
        id: checkTag
        uses: mukunku/tag-exists-action@v1.2.0
        with:
          tag: ${{ steps.extract-version.outputs.version }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        if: ${{ steps.checkTag.outputs.exists != 'true' }}
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install node modules
        run: npm install

      - name: Package plugin
        run: npm run package

      - name: Generate package folder name
        id: package-name
        run: echo "PACKAGE_NAME=${{ github.event.repository.name }}-${{ steps.extract-version.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Rename package folder
        run: mv release ${{ steps.package-name.outputs.PACKAGE_NAME }}

      - name: Zip artifacts
        uses: montudor/action-zip@v1
        with:
          args: zip -q -r ${{ steps.package-name.outputs.PACKAGE_NAME }}.zip ${{ steps.package-name.outputs.PACKAGE_NAME }}

      - name: Create Release
        uses: ncipollo/release-action@v1.12.0
        with:
          artifacts: "${{ steps.package-name.outputs.PACKAGE_NAME }}.zip"
          skipIfReleaseExists: true
          name: ${{ steps.extract-version.outputs.version }}
          tag: ${{ steps.extract-version.outputs.version }}
          commit: $MAIN_BRANCH
